@page
@model BookStore1.Pages.Search.BookSearchModel
@{
    ViewData["Title"] = "Book Search";
}

<h1>Book Search</h1>

<form method="get">
    <div class="form-group">
        <label for="title">Title:</label>
        <input type="text" id="title" asp-for="Title" class="form-control" />
    </div>

    <div class="form-group">
        <label for="author">Author:</label>
        <input type="text" id="author" asp-for="Author" class="form-control" />
    </div>

    <div class="form-group">
        <label for="genre">Genre:</label>
        <input type="text" id="genre" asp-for="Genre" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Search</button>
</form>

@if (Model.Books != null && Model.Books.Any())
{
    <h2>Search Results</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Author</th>
                <th>Genre</th>
                <th>Price</th>
                <th>Added Date</th>
                <th>Updated Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in Model.Books)
            {
                <tr>
                    <td>@book.Title</td>
                    <td>@book.Author</td>
                    <td>@book.Genre</td>
                    <td>@book.Price</td>
                    <td>@book.AddedDate.ToShortDateString()</td>
                    <td>@book.UpdatedDate.ToShortDateString()</td>
                </tr>
            }
        </tbody>
    </table>
}
else if (Model.Books != null && !Model.Books.Any() && (Model.Title != null || Model.Author != null || Model.Genre != null))
{
    <p>No results found.</p>
}
